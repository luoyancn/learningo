// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/oceanstack/rpc/req.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Req                  string   `protobuf:"bytes,1,opt,name=req" json:"req,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_req_76cb8a46513a02a1, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetReq() string {
	if m != nil {
		return m.Req
	}
	return ""
}

type Response struct {
	Resp                 string   `protobuf:"bytes,1,opt,name=resp" json:"resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_req_76cb8a46513a02a1, []int{1}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResp() string {
	if m != nil {
		return m.Resp
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "rpc.Request")
	proto.RegisterType((*Response)(nil), "rpc.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReQRePClient is the client API for ReQReP service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReQRePClient interface {
	GetResp(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Cast(ctx context.Context, in *Request, opts ...grpc.CallOption) (*empty.Empty, error)
}

type reQRePClient struct {
	cc *grpc.ClientConn
}

func NewReQRePClient(cc *grpc.ClientConn) ReQRePClient {
	return &reQRePClient{cc}
}

func (c *reQRePClient) GetResp(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/rpc.ReQReP/GetResp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reQRePClient) Cast(ctx context.Context, in *Request, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rpc.ReQReP/Cast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ReQReP service

type ReQRePServer interface {
	GetResp(context.Context, *Request) (*Response, error)
	Cast(context.Context, *Request) (*empty.Empty, error)
}

func RegisterReQRePServer(s *grpc.Server, srv ReQRePServer) {
	s.RegisterService(&_ReQReP_serviceDesc, srv)
}

func _ReQReP_GetResp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReQRePServer).GetResp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ReQReP/GetResp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReQRePServer).GetResp(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReQReP_Cast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReQRePServer).Cast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ReQReP/Cast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReQRePServer).Cast(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReQReP_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.ReQReP",
	HandlerType: (*ReQRePServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetResp",
			Handler:    _ReQReP_GetResp_Handler,
		},
		{
			MethodName: "Cast",
			Handler:    _ReQReP_Cast_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/oceanstack/rpc/req.proto",
}

func init() { proto.RegisterFile("src/oceanstack/rpc/req.proto", fileDescriptor_req_76cb8a46513a02a1) }

var fileDescriptor_req_76cb8a46513a02a1 = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8e, 0xc1, 0x8a, 0xc2, 0x30,
	0x10, 0x86, 0x29, 0x2d, 0xed, 0xee, 0xb0, 0x0b, 0x4b, 0x0e, 0x8b, 0xb4, 0x22, 0xd2, 0x83, 0x78,
	0x90, 0x04, 0xf4, 0x11, 0x44, 0xbc, 0x6a, 0x1e, 0x40, 0x68, 0xc3, 0xd8, 0x83, 0xda, 0xa4, 0x33,
	0xe9, 0xc1, 0xb7, 0x97, 0xb6, 0xf1, 0xe2, 0xed, 0xff, 0x67, 0x3e, 0x7e, 0x3e, 0x98, 0x33, 0x19,
	0x65, 0x0d, 0x56, 0x2d, 0xfb, 0xca, 0xdc, 0x14, 0x39, 0xa3, 0x08, 0x3b, 0xe9, 0xc8, 0x7a, 0x2b,
	0x62, 0x72, 0x26, 0x2f, 0x1a, 0x6b, 0x9b, 0x3b, 0xaa, 0xf1, 0x54, 0xf7, 0x57, 0x85, 0x0f, 0xe7,
	0x9f, 0x13, 0x51, 0x16, 0x90, 0x69, 0xec, 0x7a, 0x64, 0x2f, 0xfe, 0x20, 0x26, 0xec, 0x66, 0xd1,
	0x32, 0x5a, 0x7f, 0xeb, 0x21, 0x96, 0x0b, 0xf8, 0xd2, 0xc8, 0xce, 0xb6, 0x8c, 0x42, 0x40, 0x42,
	0xc8, 0x2e, 0xbc, 0xc7, 0xbc, 0xbd, 0x40, 0xaa, 0xf1, 0xac, 0xf1, 0x24, 0x56, 0x90, 0x1d, 0xd1,
	0x0f, 0xb0, 0xf8, 0x91, 0xe4, 0x8c, 0x0c, 0xa3, 0xf9, 0x6f, 0x68, 0x61, 0x65, 0x03, 0xc9, 0xbe,
	0x62, 0xff, 0x01, 0xfd, 0xcb, 0x49, 0x51, 0xbe, 0x15, 0xe5, 0x61, 0x50, 0xac, 0xd3, 0xb1, 0xef,
	0x5e, 0x01, 0x00, 0x00, 0xff, 0xff, 0x26, 0x52, 0x25, 0x3e, 0xe5, 0x00, 0x00, 0x00,
}
